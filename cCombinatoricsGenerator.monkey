Import cCombinatorics
Import iCombinatoricsGenerator
Import iCombinatorCallback
Import tCombinatoricsExceptions

Class CombinatoricsGenerator<T> Implements ICombinatoricsGenerator<T> Abstract
	Protected
	' An empty object of type T which can be returned in place of Null
	Global NIL:T[]
	' Holds the elements this object was initialized with
	Field elements:T[]
	' The last value generated by NextValue()
	Field currentValue:T[]
	' An object containing code to be applied to each element retrieved
	' via NextValue() before that element is returned.
	Field nextElementTransform:ICombinatorCallback<T>
	' This callback is applied to the entire result, not to the individual
	' elements of a permutation or combination. In short, nextElementTransform
	' runs as each element is selected, and is applied only to that element; 
	' nextValueTransform runs on the entire group, after all elements have
	' been selected.
	Field nextValueTransform:ICombinatorCallback<T[]>
	' The position in the generator series of the last generated combination. This
	' number is 0-indexed, so the first generated combination is combination number
	' 0, not combination 1.
	Field currentSeriesPosition:Int
	' The number of combinations/permutations in the generator's space
	Field length:Int
	' The combination group size this generator is configured for.
	Field groupSize:Int

	Public
	Method Length:Int()
		Return length
	End Method
	
	Method NextValue:T[] ()
		Return
	End Method

	Method GetValueAtIndex:T[] (index:Int)
		Return
	End Method

	Method SetNextElementTransform:Void(filter:ICombinatorCallback<T>)
		nextElementTransform = filter
	End Method

	Method SetNextValueTransform:Void(filter:ICombinatorCallback<T[]>)
		nextValueTransform = filter
	End Method

	Method ToArray:T[][] ()
		Local results:T[length][]

		For Local seriesIndex:Int = 0 To length - 1
			results[seriesIndex] = NextValue()
		Next
		Return results
	End Method

	Method ToStack:Stack<T[] > ()
		Local result:Stack<T[] > = New Stack<T[]>(ToArray())

		Return result
	End Method
	
	Method ToList:List<T[] > ()
		Local result:List<T[] > = New List<T[]>(ToArray())

		Return result
	End Method
	
	Method GetCurrentValue:T[] ()
		Return currentValue[..]
	End Method
	
	Method GetCurrentSeriesPosition:Int()
		Return currentSeriesPosition
	End Method
End Class